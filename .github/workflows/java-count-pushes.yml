name: Test Java Maven

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('Java/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and test
      run: mvn -B clean test

  record:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Report using hard-coded name (edit here, use for dedicated branches)
      run: curl -X GET ${{ PUSH_COUNTER_URL }}/record/hard-coded-name?build=green 

    - name: Report using branch name (dynamic, use for a pair on each branch)
      run: |
        export GIT_BRANCH_NAME=$(git symbolic-ref --short HEAD)
        curl -X GET ${{ PUSH_COUNTER_URL }}/record/branch-$GIT_BRANCH_NAME?build=green 

    - name: Report using team name (use for a pair on each branch, need to set the name first)
      run: |
        if [ -f team_name.txt ]; then
            export FILE_TEAM_NAME=$(head -n 1 team_name.txt)
        else 
            export FILE_TEAM_NAME=unknown
        fi
        curl -X GET ${{ PUSH_COUNTER_URL }}/record/team-$FILE_TEAM_NAME?build=green 

    - name: Report using GitHub user of push (dynamic, use for pairs on same branch)
      run: |
        curl -X GET ${{ PUSH_COUNTER_URL }}/record/github-$GITHUB_ACTOR?build=green 

    - name: Report using user name of last commit (dynamic, use for pairs on same branch)
      run: |
        export LOG_USER_NAME=$(git log -1 --pretty=format:%an)
        curl -X GET ${{ PUSH_COUNTER_URL }}/record/user-$LOG_USER_NAME?build=green 
